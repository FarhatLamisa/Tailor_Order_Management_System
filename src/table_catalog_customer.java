import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
public class table_catalog_customer extends javax.swing.JFrame {
int catalogID;
    /**
     * Creates new form table_catalog
     */
    public table_catalog_customer() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }

       public void table_selected_item() {
        DefaultTableModel model = (DefaultTableModel) jTable_Display_Orders.getModel();
        int i = jTable_Display_Orders.getSelectedRow();
        catalogID = (int) model.getValueAt(i, 0);
        catalog_customer cat = new catalog_customer();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery("SELECT * FROM Catalog WHERE [catalogID]=" + catalogID + "");
            while (result.next()) {
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(result.getString("Imagepath")).getImage().getScaledInstance(cat.lbl_img.getWidth(), cat.lbl_img.getHeight(), Image.SCALE_SMOOTH));
                cat.lbl_img.setIcon(imageIcon);
                cat.jTextField1.setText(result.getString("DressName"));
                cat.jTextField4.setText(Integer.toString(result.getInt("catalogID")));
            }
            cat.jTextField2.setText(jTextField2.getText());
            cat.jTextField3.setText(jTextField4.getText());
            dispose();
            cat.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_Orders = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(null);

        jTable_Display_Orders.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTable_Display_Orders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "catalogID", "DressName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Display_Orders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_OrdersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_Orders);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 240, 780, 250);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setMaximumRowCount(10);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Full list", "Salwar Kameez", "Lehenga", "Punjabi", "Sherwani", "Blouse", "Shirts", "Ladies blazer and suits", "Gents blazer and suits", " ", " " }));
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(310, 180, 240, 30);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Search by:");
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);
        jLabel6.setBounds(150, 180, 160, 30);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(560, 180, 130, 30);

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(0, 0, 0));
        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField2);
        jTextField2.setBounds(90, 100, 210, 23);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ID");
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 130, 70, 20);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hello");
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 100, 70, 20);

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(0, 0, 0));
        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(255, 255, 255));
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField4);
        jTextField4.setBounds(90, 130, 210, 23);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tailordbconnect/rsz_1back_small.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });
        jPanel1.add(jLabel4);
        jLabel4.setBounds(70, 510, 70, 40);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tailordbconnect/logout-md.jpg"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel7);
        jLabel7.setBounds(660, 510, 110, 40);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(690, 40, 59, 25);

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("List of Designs");
        jLabel5.setOpaque(true);
        jPanel1.add(jLabel5);
        jLabel5.setBounds(290, 30, 230, 40);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tailordbconnect/tailor.jpeg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -320, 830, 910);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_Display_OrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_OrdersMouseClicked
        table_selected_item();
    }//GEN-LAST:event_jTable_Display_OrdersMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable_Display_Orders.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        ArrayList<catalog_info> catalogList = new ArrayList();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if((jComboBox1.getSelectedItem().toString()).equals("Salwar Kameez")){
                ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog WHERE DressName = 'Salwar Kameez'");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
            else if ((jComboBox1.getSelectedItem().toString()).equals("Lehenga")) {
                ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog WHERE DressName = 'Lehenga'");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
            else if((jComboBox1.getSelectedItem().toString()).equals("Punjabi")){
              ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog WHERE DressName = 'Punjabi'");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
            else if((jComboBox1.getSelectedItem().toString()).equals("Sherwani")){
              ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog WHERE DressName = 'Sherwani'");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
            else if((jComboBox1.getSelectedItem().toString()).equals("Blouse")){
              ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog WHERE DressName = 'Blouse'");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
           else if((jComboBox1.getSelectedItem().toString()).equals("Shirts")){
              ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog WHERE DressName = 'Shirts'");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
            else if((jComboBox1.getSelectedItem().toString()).equals("Ladies blazer and suits")){
              ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog WHERE DressName = 'Ladies blazer and suits'");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
            else if((jComboBox1.getSelectedItem().toString()).equals("Gents blazer and suits")){
              ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog WHERE DressName = 'Gents blazer and suits'");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
            else if((jComboBox1.getSelectedItem().toString()).equals("Full list")){
              ResultSet resultSet = statement.executeQuery("SELECT * FROM Catalog");
                while (resultSet.next()) {
                    catalog_info catalogs;
                    if(resultSet.getInt("catalogID") != 1){
                    catalogs = new catalog_info(resultSet.getInt("catalogID"),resultSet.getString("Imagepath"), resultSet.getString("DressName"));
                    catalogList.add(catalogs);
                    }
                    ArrayList<catalog_info> list = catalogList;

                    Object[] row = new Object[3];
                    for (int i = 0; i < list.size(); i++) {
                        row[0] = list.get(i).get_catalogID();
                        //row[1] = list.get(i).get_Imagepath();
                        row[1] = list.get(i).get_DressName();
                        model.addRow(row);

                    }
                    catalogList.clear();
                }
            }
      
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
       CustomerPanel tp = new CustomerPanel();
        tp.jTextField2.setText(jTextField2.getText());
        tp.jTextField1.setText(jTextField4.getText());
        dispose();
        tp.setVisible(true);
    }//GEN-LAST:event_jLabel4MousePressed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        dispose();
        new TailorDBsigninjFrame().setVisible(true);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(table_catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(table_catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(table_catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(table_catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new table_catalog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable_Display_Orders;
    public javax.swing.JTextField jTextField2;
    public javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
