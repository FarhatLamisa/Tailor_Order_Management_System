
import com.toedter.calendar.JDateChooser;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author HP
 */
public class OrderInfo extends javax.swing.JFrame {

    String s, string_t_id, odate, cdate, o_id, option1, date, completed = "NO", imagePath, name, email, addr, filename = null, query;
    int i, t_id, option, int_o_id, value;
    float name1;
    Date date1;
    byte[] cloth_image;

    /**
     * Creates new form OrderInfo
     */
    public OrderInfo() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
    }

    private JPanel getPanel(String name, String email, String cont, String addr) {
        JPanel panel = new JPanel(new GridLayout(0, 1, 5, 5));
        JLabel nameLabel = new JLabel("Name : " + name);
        JLabel emailLabel = new JLabel("Email : " + email);
        JLabel contactLabel = new JLabel("Contact : " + cont);
        JLabel addressLabel = new JLabel("Address : " + addr);
        panel.add(nameLabel);
        panel.add(emailLabel);
        panel.add(contactLabel);
        panel.add(addressLabel);

        return panel;
    }

    public ArrayList<Orders> orderList() {
        ArrayList<Orders> orderList = new ArrayList();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            string_t_id = jTextField12.getText();
            t_id = Integer.parseInt(string_t_id);
            ResultSet resultSet = statement.executeQuery("SELECT * FROM Orders WHERE TailorId = " + t_id + "");
            Orders orders;
            while (resultSet.next()) {
                odate = resultSet.getDate("OrderDate").toString();
                cdate = resultSet.getDate("CompletingDate").toString();
                orders = new Orders(resultSet.getInt("OrderID"), resultSet.getInt("CustomerId"), resultSet.getInt("TailorId"), odate, cdate, resultSet.getString("Completed"), resultSet.getString("Emergency_make"), resultSet.getBytes("Image"));
                orderList.add(orders);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return orderList;
    }

    public void show_orders() {
        ArrayList<Orders> list = orderList();
        s = jTextField12.getText();
        i = Integer.parseInt(s);
        AllListOfOrders alo = new AllListOfOrders();
        alo.jTextField1.setText(s);
        DefaultTableModel model = (DefaultTableModel) alo.jTable_Display_Orders.getModel();
        Object[] row = new Object[7];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).get_order_id();
            row[1] = list.get(i).get_customer_id();
            row[2] = list.get(i).get_tailor_id();
            row[3] = list.get(i).get_order_date();
            row[4] = list.get(i).get_complete_date();
            row[5] = list.get(i).completed();
            row[6] = list.get(i).emergency();
            model.addRow(row);
        }
        dispose();
        alo.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        lbl_img = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jButton24 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setUndecorated(true);

        jPanel1.setLayout(null);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Order ID:");
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 70, 110, 30);

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Customer ID:");
        jLabel8.setOpaque(true);
        jPanel1.add(jLabel8);
        jLabel8.setBounds(430, 70, 110, 30);

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Date of order:");
        jLabel9.setOpaque(true);
        jPanel1.add(jLabel9);
        jLabel9.setBounds(20, 150, 110, 30);

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Neck:");
        jLabel10.setOpaque(true);
        jPanel1.add(jLabel10);
        jLabel10.setBounds(20, 230, 110, 30);

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Waist:");
        jLabel11.setOpaque(true);
        jPanel1.add(jLabel11);
        jLabel11.setBounds(20, 310, 110, 30);

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Shoulder:");
        jLabel12.setOpaque(true);
        jPanel1.add(jLabel12);
        jLabel12.setBounds(20, 270, 110, 30);

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Wrist:");
        jLabel13.setOpaque(true);
        jPanel1.add(jLabel13);
        jLabel13.setBounds(20, 430, 110, 30);

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Arm:");
        jLabel14.setOpaque(true);
        jPanel1.add(jLabel14);
        jLabel14.setBounds(20, 350, 110, 30);

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Completed:");
        jLabel15.setOpaque(true);
        jPanel1.add(jLabel15);
        jLabel15.setBounds(20, 590, 110, 30);

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Chest:");
        jLabel16.setOpaque(true);
        jPanel1.add(jLabel16);
        jLabel16.setBounds(20, 390, 110, 30);

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Tailor ID:");
        jLabel17.setOpaque(true);
        jPanel1.add(jLabel17);
        jLabel17.setBounds(20, 110, 110, 30);

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Thighs:");
        jLabel18.setOpaque(true);
        jPanel1.add(jLabel18);
        jLabel18.setBounds(20, 470, 110, 30);

        jLabel19.setBackground(new java.awt.Color(0, 0, 0));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Deadline:");
        jLabel19.setOpaque(true);
        jPanel1.add(jLabel19);
        jLabel19.setBounds(430, 180, 110, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(740, 30, 67, 31);

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(540, 70, 100, 30);

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(0, 0, 0));
        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField2);
        jTextField2.setBounds(130, 150, 180, 30);

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(0, 0, 0));
        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField3);
        jTextField3.setBounds(130, 190, 180, 30);

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(0, 0, 0));
        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(255, 255, 255));
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField4);
        jTextField4.setBounds(130, 310, 180, 30);

        jTextField5.setEditable(false);
        jTextField5.setBackground(new java.awt.Color(0, 0, 0));
        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(255, 255, 255));
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField5);
        jTextField5.setBounds(130, 270, 180, 30);

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(0, 0, 0));
        jTextField6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(255, 255, 255));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField6);
        jTextField6.setBounds(130, 350, 180, 30);

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(0, 0, 0));
        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 255, 255));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField7);
        jTextField7.setBounds(130, 390, 180, 30);

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(0, 0, 0));
        jTextField8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(255, 255, 255));
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField8);
        jTextField8.setBounds(130, 430, 180, 30);

        jTextField9.setEditable(false);
        jTextField9.setBackground(new java.awt.Color(0, 0, 0));
        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(255, 255, 255));
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField9);
        jTextField9.setBounds(130, 510, 180, 30);

        jTextField10.setEditable(false);
        jTextField10.setBackground(new java.awt.Color(0, 0, 0));
        jTextField10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(255, 255, 255));
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField10);
        jTextField10.setBounds(130, 70, 180, 30);

        jTextField11.setEditable(false);
        jTextField11.setBackground(new java.awt.Color(0, 0, 0));
        jTextField11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField11.setForeground(new java.awt.Color(255, 255, 255));
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField11);
        jTextField11.setBounds(540, 180, 120, 30);

        jTextField12.setEditable(false);
        jTextField12.setBackground(new java.awt.Color(0, 0, 0));
        jTextField12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField12.setForeground(new java.awt.Color(255, 255, 255));
        jTextField12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField12);
        jTextField12.setBounds(130, 110, 180, 30);

        jTextField13.setEditable(false);
        jTextField13.setBackground(new java.awt.Color(0, 0, 0));
        jTextField13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField13.setForeground(new java.awt.Color(255, 255, 255));
        jTextField13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField13);
        jTextField13.setBounds(130, 470, 180, 30);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tailordbconnect/rsz_1back_small.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 640, 80, 40);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tailordbconnect/logout-md.jpg"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4);
        jLabel4.setBounds(700, 640, 119, 50);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Change");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(310, 190, 80, 30);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Change");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(310, 270, 80, 30);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Change");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(310, 350, 80, 30);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Change");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(310, 390, 80, 30);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Change");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(310, 430, 80, 30);

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Change");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(310, 470, 80, 30);

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Change");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(310, 510, 80, 30);

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Change");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(310, 310, 80, 30);

        jButton10.setBackground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Change");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);
        jButton10.setBounds(660, 180, 80, 30);

        jButton11.setBackground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Change");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11);
        jButton11.setBounds(310, 150, 80, 30);

        jLabel20.setBackground(new java.awt.Color(0, 0, 0));
        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Height:");
        jLabel20.setOpaque(true);
        jPanel1.add(jLabel20);
        jLabel20.setBounds(20, 190, 110, 30);

        jTextField14.setEditable(false);
        jTextField14.setBackground(new java.awt.Color(0, 0, 0));
        jTextField14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField14.setForeground(new java.awt.Color(255, 255, 255));
        jTextField14.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField14);
        jTextField14.setBounds(130, 230, 180, 30);

        jButton12.setBackground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Change");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12);
        jButton12.setBounds(310, 230, 80, 30);

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Fees:");
        jLabel21.setOpaque(true);
        jPanel1.add(jLabel21);
        jLabel21.setBounds(20, 510, 110, 30);

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Emergency:");
        jLabel22.setOpaque(true);
        jPanel1.add(jLabel22);
        jLabel22.setBounds(20, 550, 110, 30);

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText(" Order Info");
        jLabel23.setOpaque(true);
        jPanel1.add(jLabel23);
        jLabel23.setBounds(280, 20, 290, 40);

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Extra Description:");
        jLabel24.setOpaque(true);
        jPanel1.add(jLabel24);
        jLabel24.setBounds(430, 220, 130, 30);

        jTextField15.setEditable(false);
        jTextField15.setBackground(new java.awt.Color(0, 0, 0));
        jTextField15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField15.setForeground(new java.awt.Color(255, 255, 255));
        jTextField15.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField15);
        jTextField15.setBounds(130, 590, 180, 30);

        jTextField16.setEditable(false);
        jTextField16.setBackground(new java.awt.Color(0, 0, 0));
        jTextField16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField16.setForeground(new java.awt.Color(255, 255, 255));
        jTextField16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField16);
        jTextField16.setBounds(130, 550, 180, 30);

        jButton13.setBackground(new java.awt.Color(255, 255, 255));
        jButton13.setText("Change");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13);
        jButton13.setBounds(310, 590, 80, 30);

        jButton14.setBackground(new java.awt.Color(255, 255, 255));
        jButton14.setText("Change");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton14);
        jButton14.setBounds(310, 550, 80, 30);

        jButton15.setBackground(new java.awt.Color(255, 255, 255));
        jButton15.setText("Change");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton15);
        jButton15.setBounds(700, 250, 80, 30);

        jButton17.setBackground(new java.awt.Color(255, 255, 255));
        jButton17.setText("Customer Info");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton17);
        jButton17.setBounds(640, 70, 170, 30);

        jButton18.setBackground(new java.awt.Color(255, 255, 255));
        jButton18.setText("Change");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton18);
        jButton18.setBounds(620, 490, 80, 30);

        jButton19.setBackground(new java.awt.Color(255, 255, 255));
        jButton19.setText("Change");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton19);
        jButton19.setBounds(310, 110, 80, 30);

        jButton20.setBackground(new java.awt.Color(255, 255, 255));
        jButton20.setText("Change Customer ID");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton20);
        jButton20.setBounds(640, 100, 170, 30);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(40);
        jTextArea1.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(10);
        jTextArea1.setTabSize(10);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(430, 250, 270, 120);

        lbl_img.setBackground(new java.awt.Color(255, 255, 255));
        lbl_img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(lbl_img);
        lbl_img.setBounds(430, 490, 190, 130);

        jLabel26.setBackground(new java.awt.Color(0, 0, 0));
        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Dress name");
        jLabel26.setOpaque(true);
        jPanel1.add(jLabel26);
        jLabel26.setBounds(420, 420, 120, 30);

        jTextField18.setEditable(false);
        jTextField18.setBackground(new java.awt.Color(0, 0, 0));
        jTextField18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField18.setForeground(new java.awt.Color(255, 255, 255));
        jTextField18.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField18);
        jTextField18.setBounds(540, 420, 180, 30);

        jButton22.setBackground(new java.awt.Color(255, 255, 255));
        jButton22.setText("Change");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton22);
        jButton22.setBounds(720, 420, 80, 30);

        jLabel27.setBackground(new java.awt.Color(0, 0, 0));
        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Party or Casual");
        jLabel27.setOpaque(true);
        jPanel1.add(jLabel27);
        jLabel27.setBounds(420, 380, 120, 30);

        jTextField19.setEditable(false);
        jTextField19.setBackground(new java.awt.Color(0, 0, 0));
        jTextField19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField19.setForeground(new java.awt.Color(255, 255, 255));
        jTextField19.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField19);
        jTextField19.setBounds(540, 140, 100, 30);

        jButton23.setBackground(new java.awt.Color(255, 255, 255));
        jButton23.setText("Change");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton23);
        jButton23.setBounds(720, 380, 80, 30);

        jButton21.setBackground(new java.awt.Color(255, 255, 255));
        jButton21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton21.setText("Make Receipt");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton21);
        jButton21.setBounds(320, 640, 250, 40);

        jLabel28.setBackground(new java.awt.Color(0, 0, 0));
        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Image of cloth");
        jLabel28.setOpaque(true);
        jPanel1.add(jLabel28);
        jLabel28.setBounds(430, 470, 130, 20);

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("CatalogID");
        jLabel25.setOpaque(true);
        jPanel1.add(jLabel25);
        jLabel25.setBounds(430, 140, 110, 30);

        jTextField17.setEditable(false);
        jTextField17.setBackground(new java.awt.Color(0, 0, 0));
        jTextField17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField17.setForeground(new java.awt.Color(255, 255, 255));
        jTextField17.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTextField17);
        jTextField17.setBounds(540, 380, 180, 30);

        jButton24.setBackground(new java.awt.Color(255, 255, 255));
        jButton24.setText("Change");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton24);
        jButton24.setBounds(640, 140, 170, 30);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tailordbconnect/tailor.jpeg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -10, 840, 970);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        dispose();
        new TailorDBsigninjFrame().setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        show_orders();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField3.getText()), 0, 200, 0.1);
        JSpinner spinner = new JSpinner(sModel);
        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        int_o_id = Integer.parseInt(jTextField10.getText());
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Height='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Height FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("Height");

                    jTextField3.setText(String.valueOf(name1));

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField5.getText()), 0, 200, 0.1);
        JSpinner spinner = new JSpinner(sModel);
        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        int_o_id = Integer.parseInt(jTextField10.getText());
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Shoulder='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Shoulder FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("Shoulder");
                    jTextField5.setText(String.valueOf(name1));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField6.getText()), 0, 200, 0.1);
        JSpinner spinner = new JSpinner(sModel);
        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        int_o_id = Integer.parseInt(jTextField10.getText());

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Arm='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Arm FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("Arm");

                    jTextField6.setText(String.valueOf(name1));

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField7.getText()), 0, 200, 0.1);
        JSpinner spinner = new JSpinner(sModel);

        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        int_o_id = Integer.parseInt(jTextField10.getText());

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Chest='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Chest FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("Chest");

                    jTextField7.setText(String.valueOf(name1));

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField8.getText()), 0, 200, 0.1);
        JSpinner spinner = new JSpinner(sModel);

        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        int_o_id = Integer.parseInt(jTextField10.getText());

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Wrist='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Wrist FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("Wrist");

                    jTextField8.setText(String.valueOf(name1));

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField13.getText()), 0, 200, 0.1);
        JSpinner spinner = new JSpinner(sModel);

        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        int_o_id = Integer.parseInt(jTextField10.getText());
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Thighs='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Thighs FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("Thighs");
                    jTextField13.setText(String.valueOf(name1));

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField9.getText()), 0, 1000, 0.1);
        JSpinner spinner = new JSpinner(sModel);
        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        int_o_id = Integer.parseInt(jTextField10.getText());

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set fee='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT fee FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("fee");

                    jTextField9.setText(String.valueOf(name1));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField4.getText()), 0, 200, 0.1);
        JSpinner spinner = new JSpinner(sModel);

        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        int_o_id = Integer.parseInt(jTextField10.getText());

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Waist='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Waist FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("Waist");

                    jTextField4.setText(String.valueOf(name1));

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        JDateChooser jdc = new JDateChooser();
        option = JOptionPane.showOptionDialog(null, jdc, "Enter date", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, jTextField11.getText());
        int_o_id = Integer.parseInt(jTextField10.getText());
        if (option == JOptionPane.OK_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
                Statement statement = connection.createStatement();
                statement.executeUpdate("UPDATE Orders set CompletingDate='" + new SimpleDateFormat("yyyy-MM-dd").format(jdc.getDate()) + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT CompletingDate FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    date = resultSet.getString("CompletingDate");
                    jTextField11.setText((date));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        JDateChooser jdc = new JDateChooser();
        String day = jTextField11.getText();
        //JSpinner spinner = new JSpinner(sModel);
        //(new SimpleDateFormat("yyyy-MM-dd").format(spinner.getValue()))
        option = JOptionPane.showOptionDialog(null, jdc, "Enter date", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, day);
        int_o_id = Integer.parseInt(jTextField10.getText());
        if (option == JOptionPane.OK_OPTION) {
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
                Statement statement = connection.createStatement();
                statement.executeUpdate("UPDATE Orders set OrderDate='" + new SimpleDateFormat("yyyy-MM-dd").format(jdc.getDate()) + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT OrderDate FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    date = resultSet.getString("OrderDate");
                    jTextField2.setText((date));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed

        SpinnerNumberModel sModel = new SpinnerNumberModel(Float.parseFloat(jTextField14.getText()), 0, 200, 0.1);
        JSpinner spinner = new JSpinner(sModel);

        option = JOptionPane.showOptionDialog(null, spinner, "Enter valid number", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        int_o_id = Integer.parseInt(jTextField10.getText());

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Neck='" + spinner.getValue() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Neck FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    name1 = resultSet.getFloat("Neck");

                    jTextField14.setText(String.valueOf(name1));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton12ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        String[] list = {"YES", "NO"};
        JComboBox jcb = new JComboBox(list);
        int_o_id = Integer.parseInt(jTextField10.getText());
        option = JOptionPane.showOptionDialog(null, jcb, "Yes or no?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Completed='" + jcb.getSelectedItem() + "'WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Completed FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    s = resultSet.getString("Completed");
                    jTextField15.setText(s);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        String[] list = {"YES", "NO"};
        JComboBox jcb = new JComboBox(list);
        int_o_id = Integer.parseInt(jTextField10.getText());
        option = JOptionPane.showOptionDialog(null, jcb, "Yes or no?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Emergency_make='" + jcb.getSelectedItem() + "'WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Emergency_make FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    s = resultSet.getString("Emergency_make");
                    jTextField16.setText(s);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        JTextArea jta = new JTextArea();
        option = JOptionPane.showOptionDialog(null, jta, "Extra description:", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        int_o_id = Integer.parseInt(jTextField10.getText());
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set ExtraDescribe='" + jta.getText() + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT ExtraDescribe FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    s = resultSet.getString("ExtraDescribe");
                    if (s != null || s != "") {
                        jTextArea1.setText(String.valueOf(s));
                    } else {
                        jTextArea1.setText("not given");
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery("SELECT * FROM Customer WHERE CustomerID = " + Integer.parseInt(jTextField1.getText()) + "");
            while (result.next()) {
                String name = result.getString("UserName");
                String email = result.getString("Email");
                String cont1 = "+880" + String.valueOf(result.getInt("CustomerContact"));
                String addr = result.getString("CustomerAddress");
                getPanel(name, email, cont1, addr);
                JOptionPane.showMessageDialog(null, getPanel(name, email, cont1, addr), "Customer Info: ", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        if (filename != null) {
            int_o_id = Integer.parseInt(jTextField10.getText());

            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
                Statement statement = connection.createStatement();
                statement.executeUpdate("UPDATE Orders set ImagePath='" + filename + "' WHERE OrderID='" + int_o_id + "'");
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(lbl_img.getWidth(), lbl_img.getHeight(), Image.SCALE_SMOOTH));
                lbl_img.setIcon(imageIcon);
                File image = new File(filename);
                FileInputStream fis = new FileInputStream(image);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];
                for (int readNum; (readNum = fis.read(buf)) != -1;) {
                    bos.write(buf, 0, readNum);
                }
                cloth_image = bos.toByteArray();
                statement.executeUpdate("UPDATE Orders set Image='" + cloth_image + "' WHERE OrderID='" + int_o_id + "'");

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        ArrayList<String> list = new ArrayList<String>();
        int_o_id = Integer.parseInt(jTextField10.getText());
        query = "SELECT TailorID FROM Tailor";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);
            while (result.next()) {
                list.add(String.valueOf(result.getInt("TailorID")));
            }
            String[] array = list.toArray(new String[list.size()]);

            //JTextField spinner = new JTextField();
            JComboBox jcb = new JComboBox(array);
            option = JOptionPane.showOptionDialog(null, jcb, "Enter ID", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set TailorId='" + (Integer.parseInt(jcb.getSelectedItem().toString())) + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT TailorId FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    value = resultSet.getInt("TailorId");
                    jTextField1.setText(String.valueOf(value));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        ArrayList<String> list = new ArrayList<String>();
        int_o_id = Integer.parseInt(jTextField10.getText());
        query = "SELECT CustomerID FROM Customer";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);
            while (result.next()) {
                list.add(String.valueOf(result.getInt("CustomerID")));
            }
            String[] array = list.toArray(new String[list.size()]);
            JComboBox jcb = new JComboBox(array);
            option = JOptionPane.showOptionDialog(null, jcb, "Enter ID", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set CustomerId='" + (Integer.parseInt(jcb.getSelectedItem().toString())) + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT CustomerId FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    value = resultSet.getInt("CustomerId");
                    jTextField1.setText(String.valueOf(value));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        String[] list = {"Kamiz", "Salwar", "Kamiz+Salwar", "Lehenga", "Blouse", "Gown", "Tops", "Kurti", "Saari", "Ladies Blazer", "Ladies Suit", "Shirt", "Pant", "Punjabi", "Sherwani", "Blazer", "Suit"};
        JComboBox jcb = new JComboBox(list);
        int_o_id = Integer.parseInt(jTextField10.getText());
        option = JOptionPane.showOptionDialog(null, jcb, "Select Dress Name", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set DressType ='" + jcb.getSelectedItem().toString() + "'WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT DressType FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    s = resultSet.getString("DressType");
                    jTextField18.setText(s);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        String[] list = {"Party", "Casual"};
        JComboBox jcb = new JComboBox(list);
        int_o_id = Integer.parseInt(jTextField10.getText());
        option = JOptionPane.showOptionDialog(null, jcb, "Party or Casual", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set Party_Casual ='" + jcb.getSelectedItem().toString() + "'WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT Party_Casual FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    //s = resultSet.getString("DressType");
                    jTextField17.setText(resultSet.getString("Party_Casual"));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        Record r = new Record();
        int t_phone = 0;
        String height, neck, shoulder, waist, chest, thighs, wrist, arm, emergency, t_name = null, t_email = null;
        String oid = jTextField10.getText();
        String odate = jTextField2.getText();
        String deadline = jTextField11.getText();
        String tid = jTextField12.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery("SELECT * FROM Tailor WHERE TailorID = " + tid + "");
            if (result.next()) {
                t_name = result.getString("TailorName");
                t_email = result.getString("TailorEmail");
                t_phone = result.getInt("TailorContact");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        String fee = jTextField9.getText();
        String cid = jTextField1.getText();
        String des = jTextArea1.getText();
        String dresstype = jTextField18.getText();
        emergency = jTextField16.getText();
        if (jTextField3.getText().equals("0.0")) {
            height = "not given";
        } else {
            height = jTextField3.getText();
        }
        if (jTextField14.getText().equals("0.0")) {
            neck = "not given";
        } else {
            neck = jTextField14.getText();
        }
        if (jTextField5.getText().equals("0.0")) {
            shoulder = "not given";
        } else {
            shoulder = jTextField5.getText();
        }
        if (jTextField4.getText().equals("0.0")) {
            waist = "not given";
        } else {
            waist = jTextField4.getText();
        }
        if (jTextField6.getText().equals("0.0")) {
            arm = "not given";
        } else {
            arm = jTextField6.getText();
        }
        if (jTextField7.getText().equals("0.0")) {
            chest = "not given";
        } else {
            chest = jTextField7.getText();
        }
        if (jTextField8.getText().equals("0.0")) {
            wrist = "not given";
        } else {
            wrist = jTextField8.getText();
        }
        if (jTextField13.getText().equals("0.0")) {
            thighs = "not given";
        } else {
            thighs = jTextField13.getText();
        }

        r.jTextArea1.append(
                "         -----------Order Info---------\nOrderID: " + oid + "\nTailorID: " + tid + "\nCustomerID: " + cid + "\nDate of Order: " + odate + "\nDeadline: " + deadline + "\n\n-----Measurements-----\nWaist: " + waist
                + "\nHeight: " + height + "\nNeck: " + neck + "\nShoulder: " + shoulder + "\nChest: " + chest
                + "\nThighs: " + thighs + "\nWrist: " + wrist + "\nArm: " + arm + "\nExtra Description: " + des + "\nDress Type: " + dresstype + "\nEmergency: " + emergency + "\n\nFees: " + fee
                + "\n\n-----Tailor Info-----\nTailor name: " + t_name + "\nTailor Email: " + t_email + "\nTailor Phone: +880" + t_phone + "\n\n------------\t\t\t--------------\nTailor's Signture\t\tCustomer's Signature"
        );
        r.jTextField1.setText(oid);
        dispose();
        r.setVisible(true);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        ArrayList<String> list = new ArrayList<String>();
        int_o_id = Integer.parseInt(jTextField10.getText());
        query = "SELECT CatalogId FROM Catalog";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=TailorDBproject;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);
            while (result.next()) {
                list.add(String.valueOf(result.getInt("CatalogId")));
            }
            String[] array = list.toArray(new String[list.size()]);
            JComboBox jcb = new JComboBox(array);
            option = JOptionPane.showOptionDialog(null, jcb, "Enter ID", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (option == JOptionPane.OK_OPTION) {
                statement.executeUpdate("UPDATE Orders set CatalogId='" + (Integer.parseInt(jcb.getSelectedItem().toString())) + "' WHERE OrderID='" + int_o_id + "'");
                ResultSet resultSet = statement.executeQuery("SELECT CatalogId FROM Orders WHERE OrderID='" + int_o_id + "'");
                if (resultSet.next()) {
                    value = resultSet.getInt("CatalogId");
                    jTextField19.setText(String.valueOf(value));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextField jTextField1;
    public javax.swing.JTextField jTextField10;
    public javax.swing.JTextField jTextField11;
    public javax.swing.JTextField jTextField12;
    public javax.swing.JTextField jTextField13;
    public javax.swing.JTextField jTextField14;
    public javax.swing.JTextField jTextField15;
    public javax.swing.JTextField jTextField16;
    public javax.swing.JTextField jTextField17;
    public javax.swing.JTextField jTextField18;
    public javax.swing.JTextField jTextField19;
    public javax.swing.JTextField jTextField2;
    public javax.swing.JTextField jTextField3;
    public javax.swing.JTextField jTextField4;
    public javax.swing.JTextField jTextField5;
    public javax.swing.JTextField jTextField6;
    public javax.swing.JTextField jTextField7;
    public javax.swing.JTextField jTextField8;
    public javax.swing.JTextField jTextField9;
    public javax.swing.JLabel lbl_img;
    // End of variables declaration//GEN-END:variables
}
